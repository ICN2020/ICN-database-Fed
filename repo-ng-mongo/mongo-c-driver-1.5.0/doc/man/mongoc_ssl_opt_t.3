.\" This manpage is Copyright (C) 2016 MongoDB, Inc.
.\" 
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.3
.\" or any later version published by the Free Software Foundation;
.\" with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
.\" A copy of the license is included in the section entitled "GNU
.\" Free Documentation License".
.\" 
.TH "MONGOC_SSL_OPT_T" "3" "2016\(hy11\(hy07" "MongoDB C Driver"
.SH NAME
mongoc_ssl_opt_t \- typedef struct
{
   const char *pem_file;
   const char *pem_pwd;
   const char *ca_file;
   const char *ca_dir;
   const char *crl_file;
   bool        weak_cert_validation;
   bool        allow_invalid_hostname;
   void       *padding [7];
} mongoc_ssl_opt_t;
.SH "SYNOPSIS"

.nf
typedef struct
{
   const char *pem_file;
   const char *pem_pwd;
   const char *ca_file;
   const char *ca_dir;
   const char *crl_file;
   bool        weak_cert_validation;
   bool        allow_invalid_hostname;
   void       *padding [7];
} mongoc_ssl_opt_t;
.fi

.SH "DESCRIPTION"

This structure is used to set the SSL options for a
.B mongoc_client_t
or
.B mongoc_client_pool_t
.

Beginning in version 1.2.0, once a pool or client has any SSL options set, all connections use SSL, even if
.B ssl=true
is omitted from the MongoDB URI. Before, SSL options were ignored unless
.B ssl=true
was included in the URI.

As of 1.4.0, the
.B mongoc_client_pool_set_ssl_opts
and
.B mongoc_client_set_ssl_opts
will not only shallow copy the struct, but will also copy the
.B const char*
. It is therefore no longer needed to make sure the values remain valid after setting them.
.
.SH "CLIENT AUTHENTICATION"

When MongoDB is started with SSL enabled, it will by default require the client o provide a client certificate issued by a certificate authority specified by
.B --sslCAFile
, or an authority trusted by the native certificate store in use on the server.

To provide the client certificate, the user must configure the
.B pem_file
to point at a PEM armored certificate.

.nf
mongoc_ssl_opt_t ssl_opts = { 0 };

ssl_opts.pem_file = "/path/to/client\(hycertificate.pem"

/* Then set the client ssl_opts, when using a single client mongoc_client_t */
mongoc_client_pool_set_ssl_opts (pool, &ssl_opts);
/* or, set the pool ssl_opts, when using a the thread safe mongoc_client_pool_t */
mongoc_client_set_ssl_opts (client, &ssl_opts);
.fi

.SH "SERVER CERTIFICATE VERIFICATION"

The MongoDB C Driver will automatically verify the validity of the server certificate, such as issued by configured Certificate Authority, hostname validation, and expiration.

To overwrite this behaviour, it is possible to disable hostname validation, and/or allow otherwise invalid certificates. This behaviour is controlled using the
.B allow_invalid_hostname
and
.B weak_cert_validation
fields. By default, both are set to
.B false
. It is not recommended to change these defaults as it exposes the client to
.B Man In The Middle
attacks (when
.B allow_invalid_hostname
is set) and otherwise invalid certificates when
.B weak_cert_validation
is set to
.B true
.

.SH "NATIVE TLS SUPPORT ON LINUX (OPENSSL)"

The MongoDB C Driver supports the dominating TLS library (OpenSSL) and crypto libraries (OpenSSL's libcrypto) on Linux and Unix platforms.

Support for OpenSSL 1.1 and later was added in 1.4.0.

When compiled against OpenSSL, the driver will attempt to load the system default certificate store, as configured by the distribution, if the
.B ca_file
and
.B ca_dir
are not set.

.SH "NATIVE TLS SUPPORT ON WINDOWS (SECURE CHANNEL)"

The MongoDB C Driver supports the Windows native TLS library (Secure Channel, or SChannel), and its native crypto library (Cryptography API: Next Generation, or CNG).

When compiled against the Windows native libraries, the
.B ca_dir
option is not supported, and will issue an error if used.

Encrypted PEM files (e.g., requiring
.B pem_pwd
) are also not supported, and will result in error when attempting to load them.

When
.B ca_file
is provided, the driver will only allow server certificates issued by the authority (or authorities) provided. When no
.B ca_file
is provided, the driver will look up the Certificate Authority using the
.B System Local Machine Root
certificate store to confirm the provided certificate.

When
.B crl_file
is provided, the driver will import the revocation list to the
.B System Local Machine Root
certificate store.

.SH "NATIVE TLS SUPPORT ON MAC OS X / DARWIN (SECURE TRANSPORT)"

The MongoDB C Driver supports the Darwin (OS X, macOS, iOS, etc.) native TLS library (Secure Transport), and its native crypto library (Common Crypto, or CC).

When compiled against Secure Transport, the
.B ca_dir
option is not supported, and will issue an error if used.

When
.B ca_file
is provided, the driver will only allow server certificates issued by the authority (or authorities) provided. When no
.B ca_file
is provided, the driver will use the Certificate Authorities in the currently unlocked keychains.

.SH "SEE ALSO"

.IP \[bu] 2
.IP \[bu] 2


.B
.SH COLOPHON
This page is part of MongoDB C Driver.
Please report any bugs at https://jira.mongodb.org/browse/CDRIVER.