# Configure the servers listening port: the first is for https connection, the second is for http 
server.port=4431      
server-http.port=8080

spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/fesDB?useSSL=false
spring.datasource.username = ogb
spring.datasource.password = ogb

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.validation-query = SELECT 1

# Mongo DB client uri connection
# spring.data.mongodb.uri=mongodb://bv:1234@192.168.69.1/?authSource=spatial

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Support for ssl. Specify the certificate path, password and type
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=OGBKeystorePassword
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=tomcat

# IP address of the AuC
fes.auc.url=http://192.168.78.100:8090/AUC
fes.fes.ip =192.168.78.110

# IP address of the NFD node
fes.nfd.ip=127.0.0.1

